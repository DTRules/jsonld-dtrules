#!/usr/bin/env node

/*jslint node: true, vars: true */
'use strict';

//Copyright 2014 Resilient Network Systems, Inc.
//
//Licensed under the Apache License, Version 2.0 (the "License");  
//you may not use this file except in compliance with the License.  
//You may obtain a copy of the License at  
//
//     http://www.apache.org/licenses/LICENSE-2.0  
//
//Unless required by applicable law or agreed to in writing, software  
//distributed under the License is distributed on an "AS IS" BASIS,  
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
//See the License for the specific language governing permissions and  
//limitations under the License. 

var util = require('util');
var dt = require('dt');
var jld = require('jld_util');
var r_t = require('roster').r_t;
var r_p = require('roster').r_p;
var r = require('roster');
var j_t = require('job').j_t;
var j_p = require('job').j_p;
var jb = require('job');

//Decision Tables
var rosterDt = require('./roster_dt');
var chipDt = require('./ChipEligibility_dt');

//Roster DT input
var rosterInput = require('./roster_input');

//DT functions
var rosterDtFunc;
var chipDtFunc;

//Expected results
var j1r = require('./job1_results');
var j2r = require('./job2_results');
var roster_results = require('./roster_results');

function test() {

    //Jobs for chipDT
    var job1 = require('./job1');
    var job2 = require('./job2');


    rosterDtFunc = dt.compile(rosterDt);
    chipDtFunc = dt.compile(chipDt);

    var i;
    var roster = [];
    var j_results, jr_results;

    rosterDtFunc(rosterInput, roster);
    if (roster.length !== roster_results.length) {
        return 'fail: roster test failed';
    }

    for (i = 0; i < roster.length; i += 1) {
        if (roster[i] !== roster_results[i]) {
            return 'fail: roster test failed';
        }
    }

    chipDtFunc(job1);
    if (job1[j_p.results]["@list"].length !== j1r[j_p.results]["@list"].length) {
        return 'fail: job1 test failed';
    }
    j_results = job1[j_p.results]["@list"];
    jr_results = j1r[j_p.results]["@list"];

    for (i = 0; i < j_results; i += 1) {
        if (j_results[i][j_p.client_id][0] !== jr_results[i][j_p.client_id][0]) {
            return 'fail: job1 test failed';
        }
        if (j_results[i][j_p.program][0] !== jr_results[i][j_p.program][0]) {
            return 'fail: job1 test failed';
        }
        if (j_results[i][j_p.programLevel][0] !== jr_results[i][j_p.programLevel][0]) {
            return 'fail: job1 test failed';
        }
        if (j_results[i][j_p.eligible][0] !== jr_results[i][j_p.eligible][0]) {
            return 'fail: job1 test failed';
        }
        if (j_results[i][j_p.client_fpl][0] !== jr_results[i][j_p.client_fpl][0]) {
            return 'fail: job1 test failed';
        }
        if (j_results[i][j_p.totalGroupIncome][0] !== jr_results[i][j_p.totalGroupIncome][0]) {
            return 'fail: job1 test failed';
        }

    }

    chipDtFunc(job2);
    if (job2[j_p.results]["@list"].length !== j2r[j_p.results]["@list"].length) {
        return 'fail: job2 test failed';
    }
    j_results = job2[j_p.results]["@list"];
    jr_results = j2r[j_p.results]["@list"];

    for (i = 0; i < j_results; i += 1) {
        if (j_results[i][j_p.client_id][0] !== jr_results[i][j_p.client_id][0]) {
            return 'fail: job2 test failed';
        }
        if (j_results[i][j_p.program][0] !== jr_results[i][j_p.program][0]) {
            return 'fail: job2 test failed';
        }
        if (j_results[i][j_p.programLevel][0] !== jr_results[i][j_p.programLevel][0]) {
            return 'fail: job2 test failed';
        }
        if (j_results[i][j_p.eligible][0] !== jr_results[i][j_p.eligible][0]) {
            return 'fail: job2 test failed';
        }
        if (j_results[i][j_p.client_fpl][0] !== jr_results[i][j_p.client_fpl][0]) {
            return 'fail: job2 test failed';
        }
        if (j_results[i][j_p.totalGroupIncome][0] !== jr_results[i][j_p.totalGroupIncome][0]) {
            return 'fail: job2 test failed';
        }

    }
    return 'pass: DT tests passed';

}

console.log(test());